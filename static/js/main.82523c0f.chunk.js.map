{"version":3,"sources":["Components/Section/Section.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","App.js","index.js","Components/Section/Section.module.css","Components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","className","s","container","FeedbackOptions","options","onLeaveFeedback","keyRender","key","push","name","type","onClick","btn","toUpperCase","slice","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","typeFeedBack","totalFeedback","positivFeedback","Math","round","countPositiveFeedbackPercentage","event","target","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mPAiBeA,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEC,UAAtB,UACE,6BAAKJ,IACJC,M,gBCoBQI,MAxBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC9BC,EAAY,GAChB,IAAK,IAAIC,KAAOH,EACdE,EAAUE,KACR,wBACEC,KAAMF,EACNG,KAAK,SACLC,QAASN,EAETL,UAAWC,IAAEW,IALf,SAOGL,EAAI,GAAGM,YAAY,GAAKN,EAAIO,MAAM,IAH9BP,IAQX,OAAO,8BAAMD,KCGAS,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,mDAAsBC,EAAtB,WCCSC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,6BAAKA,KCGC,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBR,EADqB,KACfS,EADe,OAEED,mBAAS,GAFX,mBAErBP,EAFqB,KAEZS,EAFY,OAGNF,mBAAS,GAHH,mBAGrBN,EAHqB,KAGhBS,EAHgB,KAKtBC,EAAe,CAAEZ,OAAMC,UAASC,OA0BhCW,EAPGb,EAAOC,EAAUC,EAQpBY,EALkC,SAAAD,GACtC,OAAyB,IAAlBA,EAAsB,EAAIE,KAAKC,MAAc,IAAPhB,EAAca,GAIrCI,CAAgCJ,GAExD,OACE,gCACE,cAAC,EAAD,CAAS/B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAASwB,EACTvB,gBAhCgB,SAAA6B,GAGtB,OAFsBA,EAAMC,OAAO1B,MAGjC,IAAK,OACHgB,GAAQ,SAAAW,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHV,GAAW,SAAAU,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHT,GAAO,SAAAS,GAAS,OAAIA,EAAY,WAwBlC,cAAC,EAAD,CAAStC,MAAM,aAAf,SACG+B,EACC,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,EACPT,mBAAoBU,IAGtB,cAAC,EAAD,CAAcR,QAAQ,2BCrDhCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,6B,kBCA9BD,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.82523c0f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.container}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  let keyRender = [];\n  for (let key in options) {\n    keyRender.push(\n      <button\n        name={key}\n        type=\"button\"\n        onClick={onLeaveFeedback}\n        key={key}\n        className={s.btn}\n      >\n        {key[0].toUpperCase(0) + key.slice(1)}\n      </button>,\n    );\n  }\n\n  return <div>{keyRender}</div>;\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positiv feedback: {positivePercentage}%</p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <h3>{message}</h3>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState } from 'react';\nimport Section from './Components/Section';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Statistics from './Components/Statistics';\nimport Notification from './Components/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const typeFeedBack = { good, neutral, bad };\n\n  const handleIncrement = event => {\n    const statisticName = event.target.name;\n\n    switch (statisticName) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = totalFeedback => {\n    return totalFeedback === 0 ? 0 : Math.round((good * 100) / totalFeedback);\n  };\n\n  const totalFeedback = countTotalFeedback();\n  const positivFeedback = countPositiveFeedbackPercentage(totalFeedback);\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={typeFeedBack}\n          onLeaveFeedback={handleIncrement}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {totalFeedback ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positivePercentage={positivFeedback}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3wBRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__2mc-U\"};"],"sourceRoot":""}